{"version":3,"sources":["logo.gif","List.js","Form.js","Slider.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","List","props","react_default","a","createElement","items","map","item","index","Button_default","className","type","style","margin","background","key","onClick","delete","SERVER_URL","window","location","sys_keywords","getSuggestionValue","suggestion","concat","text","axios","get","headers","Access-Control-Allow-Origin","then","response","data","catch","error","console","log","specialCharsRegex","whitespacesRegex","match","query","trim","split","reduce","result","word","length","wordLen","regex","RegExp","replace","_text$match$index","push","slice","Array","join","sort","match1","match2","renderSuggestion","_ref","suggestionText","matches","parts","AutosuggestHighlightParse","part","highlight","Form","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getSuggestions","value","inputValue","toLowerCase","suggestions","filter","kw","includes","state","keywords","indexOf","b","onChange","event","_ref2","newValue","method","setState","onSuggestionSelected","_ref3","suggestionValue","new_keywords","suggestionIndex","sectionIndex","toConsumableArray","updateParentKeywords","onSuggestionsFetchRequested","_ref4","onSuggestionsClearRequested","onKeywordDelete","keyword","k","_this$state","inputProps","placeholder","dist_default","src_List_0","Component","Slider","value1","min","max","value2","_this2","js_default","name","maxValue","minValue","allowSameValues","formatLabel","new_minprice","new_maxprice","updateParentPrices","x","new_size1","new_size2","updateParentSizes","App","sendReq","self","assertThisInitialized","size1","size2","minPrice","maxPrice","baseUrl","params","JSON","stringify","results","updateKeywords","updatePrices","updateSizes","list_items","d","color","listStyleType","src","logo","alt","src_Slider_0","src_Form_0","opacity","width","marginTop","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.84ca6f73.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a52c9fc0.gif\";","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport './List.css'\nconst List = props => (\n\n  <ul>\n    {\n      props.items.map((item, index) => <Button className=\"keybutton\" type=\"button\" style={{margin:'10px 5px',background:\"#3f51b5\"}} key={index} onClick={() => {props.delete(item)}}>{item} <span className=\"close\">x</span></Button>)\n    }\n  </ul>\n);\n\nexport default List;\n","import Autosuggest from 'react-autosuggest';\nimport AutosuggestHighlightParse from 'autosuggest-highlight/parse';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './Form.css';\nimport List from './List'\n/** Tutorial: http://react-autosuggest.js.org/ **/\n\n// should be '' if running on same server i think\nconst SERVER_URL = window.location\n// Janice's TODO: 4. prettify (center), 5. api calls to  send!\nvar sys_keywords = [];\n\naxios.get(SERVER_URL + 'keywords', {'headers':{'Access-Control-Allow-Origin': '*'}})\n  .then(function (response) {\n    sys_keywords = response.data\n  })\n  .catch(function (error) {\n    // handle error\n    console.log(error);\n  })\n\n\n\nfunction getSuggestionValue(suggestion) {\n  return `${suggestion.text}`;\n}\n/** matching code begins here **/\n// This matching code is taken directly from https://github.com/moroshko/autosuggest-highlight/issues/5\n// which will soon be merged into the Autosuggest-Highlight library, imported in this js file\nconst specialCharsRegex = /[.*+?^${}()|[\\]\\\\]/g;\nconst whitespacesRegex = /\\s+/;\n\nfunction escapeRegexCharacters(str: any) {\n    return str.replace(specialCharsRegex, '\\\\$&');\n}\nconst match = (text: any, query: any)  => {\n    return (\n        query\n            .trim()\n            .split(whitespacesRegex)\n            .reduce((result: any, word: any) => {\n                if (!word.length) return result;\n                const wordLen = word.length;\n                const regex = new RegExp(escapeRegexCharacters(word), 'i');\n                const { index = -1 } = text.match(regex);\n                if (index > -1) {\n                    result.push([index, index + wordLen]);\n\n                    // Replace what we just found with spaces so we don't find it again.\n                    text =\n                        text.slice(0, index) +\n                        new Array(wordLen + 1).join(' ') +\n                        text.slice(index + wordLen);\n                }\n\n                return result;\n            }, [])\n            .sort((match1: any, match2: any) => {\n                return match1[0] - match2[0];\n            })\n    );\n};\n/** matching code ends here **/\nfunction renderSuggestion(suggestion, { query }) {\n  const suggestionText = `${suggestion.text}`;\n  const matches = match(suggestionText, query);\n  const parts = AutosuggestHighlightParse(suggestionText, matches);\n\n  return (\n    <span className={'suggestion-content'}>\n      <span className=\"name\">\n        {\n          parts.map((part, index) => {\n            const className = part.highlight ? 'highlight' : null;\n\n            return (\n              <span className={className} key={index}>{part.text}</span>\n            );\n          })\n        }\n      </span>\n    </span>\n  );\n}\n\nclass Form extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      value: '',\n      suggestions: [],\n      keywords: []\n    };\n\n  }\n\n  getSuggestions = value => {\n    const inputValue = value.trim().toLowerCase();\n    const inputLength = inputValue.length;\n    var suggestions = inputLength === 0 ? [] : sys_keywords.filter(kw =>\n      kw.text.toLowerCase().includes(inputValue) && this.state.keywords.indexOf(kw.text) < 0)\n    suggestions.sort(function(a,b){\n      return a.text.length - b.text.length;\n    });\n    return suggestions\n    \n  };\n  onChange = (event, { newValue, method }) => {\n\n    this.setState({\n      value: newValue\n    });\n  };\n\n  onSuggestionSelected = (event, { suggestion, suggestionValue, suggestionIndex, sectionIndex, method }) => {\n    var new_keywords = [...this.state.keywords, suggestionValue]\n  \tthis.setState({\n      keywords: new_keywords,\n      value:''\n    })\n    this.props.updateParentKeywords(new_keywords)\n  };\n  \n  onSuggestionsFetchRequested = ({ value }) => {\n    this.setState({\n      suggestions: this.getSuggestions(value)\n    });\n  };\n\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: []\n    });\n  };\n\n  onKeywordDelete = (keyword) => {\n    var new_keywords = this.state.keywords.filter(k => k !== keyword)\n    this.setState({\n\n      keywords: new_keywords\n    });\n    this.props.updateParentKeywords(new_keywords)\n  }\n  render() {\n    const { value, suggestions } = this.state;\n    const inputProps = {\n      placeholder: \"Enter keywords\",\n      value,\n      onChange: this.onChange\n    };\n\n    return (\n      <div>\n\n      <Autosuggest \n        suggestions={suggestions}\n        onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n        onSuggestionSelected={this.onSuggestionSelected}\n        onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n        getSuggestionValue={getSuggestionValue}\n        renderSuggestion={renderSuggestion}\n        inputProps={inputProps} />\n      <List items={this.state.keywords} delete={this.onKeywordDelete} />\n      </div>\n    );\n  }\n}\n\nexport default Form;","import React, { Component } from 'react';\nimport InputRange from 'react-input-range';\nimport './Slider.css';\nimport 'react-input-range/lib/css/index.css'\n\n/** Tutorial: https://github.com/davidchin/react-input-range **/\n\n/** TODO Naaly: add labels (deal with padding), save input, additional inputs **/\nclass Slider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value1: {\n        min: 2,\n        max: 1700\n      },\n      value2: {\n        min: 0,\n        max: 2\n      }\n    };\n  }\n  render() {\n    return (\n      <div>\n      <div className = \"labels\">\n      Price\n      </div>\n      <div className = \"labels\">\n      Size\n      </div>\n      <div className = \"middle\">\n        <form className=\"slider\">\n          <InputRange\n            name={\"Price\"}\n            maxValue={1700}\n            minValue={2}\n            // step={Math.ceil(Math.log(1700))}\n            allowSameValues={true}\n            formatLabel={value1 => `$ ${value1}k`}\n            value={this.state.value1}\n            onChange={value1 => {\n              this.setState({ value1 });\n              var new_minprice = this.state.value1.min ;\n              var new_maxprice = this.state.value1.max ;\n              this.props.updateParentPrices(new_minprice * 1000, new_maxprice * 1000);\n\n          }} />\n        </form>\n        <form className=\"slider\">\n          <InputRange\n            name={\"Size\"}\n            maxValue={2}\n            minValue={0}\n            allowSameValues={true}\n            formatLabel={value2 => {\n              var x = `${value2}`;\n              var temp = ['Compact', 'Midsize', 'Large'][x];\n              return ` ${temp}` }}\n              value={this.state.value2}\n              onChange={value2 => {\n                this.setState({ value2 });\n                var new_size1 = ['Compact', 'Midsize', 'Large'][this.state.value2.min];\n                var new_size2 = ['Compact', 'Midsize', 'Large'][this.state.value2.max];\n                this.props.updateParentSizes(new_size1,new_size2);\n            }} />\n        </form>\n        </div>\n        </div>\n      );\n    }\n}\n\nexport default Slider;\n","import React, { Component } from 'react';\nimport Form from './Form';\nimport logo from './logo.gif';\n\nimport './App.css';\nimport Slider from './Slider';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n\tconsole.log(window.location);\n\n    this.state = {\n      size1: 'Compact', // TODO replace w nataly's code\n      size2: 'Large', // TODO replace w nataly's code\n      keywords: [''],\n      minPrice: 2000, // TODO replace\n      maxPrice: 1700000, // TODO replace\n\t  results: [],\n\t  baseUrl: window.location\n    };\n\n  }\n  sendReq = () => {\n      const self = this\n    console.log('req sent')\n    console.log(this.state.size1)\n    console.log(this.state.size2)\n    console.log(this.state.keywords)\n    console.log(this.state.minPrice)\n    console.log(this.state.maxPrice)\n\n  axios.get(this.state.baseUrl + 'search', {\n    params: {\n      size1: this.state.size1,\n      size2: this.state.size2,\n      keywords: JSON.stringify(this.state.keywords),\n      minPrice: this.state.minPrice,\n      maxPrice: this.state.maxPrice\n    }})\n  .then(function (response) {\n      self.setState({results:response.data})\n    })\n\n    // axios.get('http://localhost:5000/dummysearch')\n    // .then(function (response) {\n    //   console.log(response.data);\n    //   self.setState({results:response.data})\n    // })\n};\n\n  updateKeywords = (new_keywords) => {\n    this.setState({keywords:new_keywords})\n  }\n  updatePrices = (new_minprice,new_maxprice) => {\n    this.setState({minPrice:new_minprice});\n    this.setState({maxPrice:new_maxprice});\n  }\n  updateSizes = (new_size1,new_size2) => {\n    this.setState({size1:new_size1});\n    this.setState({size2:new_size2});\n  }\n\n  render() {\n    var list_items = this.state.results.map((d) => <li style={{color:\"black\", listStyleType:\"none\"}} key={d}>{d} </li>);\n    return (\n\n      <div className=\"App\">\n\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n        <Slider\n          updateParentPrices={this.updatePrices}\n          updateParentSizes={this.updateSizes}\n        />\n    \t\t<Form updateParentKeywords={this.updateKeywords}/>\n    \t\t<Button type=\"button\" key='search' onClick={() => {this.sendReq()}}> Search </Button>\n        <div style={{background:\"white\", opacity:\"0.6\", width:\"300px\", margin: \"auto\", marginTop: \"10px\"}}>{list_items}</div>\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}